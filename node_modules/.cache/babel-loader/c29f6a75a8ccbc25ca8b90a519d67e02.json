{"ast":null,"code":"var _jsxFileName = \"E:\\\\work github\\\\food-order-ReactApp\\\\src\\\\Header\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { Navbar, NavbarBrand, Nav, Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { Badge } from 'reactstrap';\nimport Cart from '../Cart/Cart';\nimport logo from '../assets/logo.png';\nimport cartLogo from '../assets/logo/cart.png';\nimport './Navbar.css';\nimport Context from '../store/context';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  firstName: yup.string().required(\"first name should not be empty\"),\n  lastName: yup.string().required(\"last name should not be empty\"),\n  pincode: yup.string().matches(/^[0-9]+$/, \"Must be only digits\").test('len', \"must be 5 chares long\", val => val.length === 5).required(),\n  street: yup.string().required(\"street should not be empty\") //if password and confirm password\n  // password : yup.string().min(4).max(15).required(),\n  // confirmPassword : yup.string().oneOf([yup.ref(\"password\"),null])\n\n});\n\nconst NavbarHeader = props => {\n  _s();\n\n  var _errors$firstName, _errors$lastName, _errors$pincode, _errors$street;\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const [modal, setModal] = useState(false);\n  const [Orderform, setORderform] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const toggleForm = () => setORderform(true);\n\n  const ctx = useContext(Context);\n  const hasItems = ctx.items.length > 0;\n  const ctxVal = ctx.items.reduce((curr, item) => {\n    return curr + item.amount;\n  }, 0);\n\n  const submitOrderHandler = async data => {\n    const userdata = {\n      data,\n      orderedItems: ctx.items\n    };\n    await fetch('https://react-foodorder-ea422-default-rtdb.firebaseio.com/orders.json', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: userdata,\n        orderedItems: ctx.items\n      })\n    });\n    console.log(userdata);\n    ctx.clearCart();\n    toggle();\n    register(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Navbar, {\n        color: \"light\",\n        light: true,\n        expand: \"md\",\n        className: \"container-fluid fixed-top\",\n        children: [/*#__PURE__*/_jsxDEV(NavbarBrand, {\n          className: \"navbar-brand \",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            alt: \"Logoimage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), \"Food Order\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Nav, {\n          className: \" ms-auto pe-5\",\n          navbar: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cart-btn\",\n              onClick: toggle,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: cartLogo,\n                alt: \"cartIcon\",\n                className: \"cartLogo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this), \"My Cart\", /*#__PURE__*/_jsxDEV(Badge, {\n                className: \"badge\",\n                style: {\n                  borderRadius: \"10px\"\n                },\n                children: ctxVal\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              isOpen: modal,\n              toggle: toggle,\n              children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n                toggle: toggle,\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: cartLogo,\n                  alt: \"cartIcon\",\n                  className: \"cartLogo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 39\n                }, this), \" Your Cart\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n                children: /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n                children: [!Orderform && /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn-cancel\",\n                  onClick: toggle,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 26\n                }, this), hasItems && !Orderform && /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn-order\",\n                  onClick: toggleForm,\n                  children: \"Order\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 38\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 9\n              }, this), Orderform && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  className: \"order-form\",\n                  onSubmit: handleSubmit(submitOrderHandler),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"Fname\",\n                      children: \"First Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 13\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"Fname\",\n                      name: \"firstName\",\n                      type: \"text\",\n                      ...register('firstName', {\n                        required: true\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 13\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: (_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 12\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"Lname\",\n                      children: \"Last Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 13\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"Lname\",\n                      name: \"lastName\",\n                      type: \"text\",\n                      ...register('lastName', {\n                        required: true\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 13\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: (_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 13\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"pin\",\n                      children: \"PIN CODE\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 13\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"pin\",\n                      name: \"pin\",\n                      ...register('pincode', {\n                        required: true\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 13\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: (_errors$pincode = errors.pincode) === null || _errors$pincode === void 0 ? void 0 : _errors$pincode.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 13\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"street\",\n                      children: \"Street\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 13\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"street\",\n                      name: \"street\",\n                      type: \"text\",\n                      ...register('street', {\n                        required: true\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 13\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: (_errors$street = errors.street) === null || _errors$street === void 0 ? void 0 : _errors$street.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 115,\n                      columnNumber: 13\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn-cancel\",\n                    onClick: toggle,\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn-order\",\n                    type: \"submit\",\n                    children: \"Submit Order\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NavbarHeader, \"reRYWe/6uiLQlB4x6mNYfAbCA3U=\", false, function () {\n  return [useForm];\n});\n\n_c = NavbarHeader;\nexport default NavbarHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavbarHeader\");","map":{"version":3,"sources":["E:/work github/food-order-ReactApp/src/Header/Navbar.js"],"names":["React","useState","useContext","Navbar","NavbarBrand","Nav","Button","Modal","ModalHeader","ModalBody","ModalFooter","Badge","Cart","logo","cartLogo","Context","useForm","yupResolver","yup","schema","object","shape","firstName","string","required","lastName","pincode","matches","test","val","length","street","NavbarHeader","props","register","handleSubmit","formState","errors","resolver","modal","setModal","Orderform","setORderform","toggle","toggleForm","ctx","hasItems","items","ctxVal","reduce","curr","item","amount","submitOrderHandler","data","userdata","orderedItems","fetch","method","body","JSON","stringify","user","console","log","clearCart","borderRadius","message"],"mappings":"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","sourcesContent":["import React, { useState, useContext }  from 'react';\r\n\r\nimport { Navbar,NavbarBrand,Nav, Button, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nimport { Badge } from 'reactstrap';\r\nimport Cart from '../Cart/Cart'\r\n \r\nimport logo from '../assets/logo.png';\r\nimport cartLogo from '../assets/logo/cart.png';\r\nimport './Navbar.css'\r\nimport Context from '../store/context';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\n\r\nconst schema = yup.object().shape({\r\n    firstName: yup.string().required(\"first name should not be empty\"),\r\n    lastName: yup.string().required(\"last name should not be empty\"),\r\n    pincode: yup.string().matches(/^[0-9]+$/, \"Must be only digits\").test('len', \"must be 5 chares long\", val=> val.length === 5).required(),\r\n    street: yup.string().required(\"street should not be empty\") \r\n\r\n    //if password and confirm password\r\n    // password : yup.string().min(4).max(15).required(),\r\n    // confirmPassword : yup.string().oneOf([yup.ref(\"password\"),null])\r\n})\r\n\r\nconst NavbarHeader = (props)=> {\r\n\r\n    const { register, handleSubmit, formState: { errors }  } = useForm({\r\n     resolver: yupResolver(schema),\r\n    })\r\n    \r\n      const [modal, setModal] = useState(false);\r\n      const [Orderform, setORderform] = useState(false);\r\n\r\n\r\n      const toggle = () => setModal(!modal);\r\n      const toggleForm = () => setORderform(true);\r\n\r\n      const ctx = useContext(Context);\r\n\r\n      const hasItems = ctx.items.length > 0;\r\n\r\n      const ctxVal = ctx.items.reduce((curr, item)=>{\r\n        return curr + item.amount;\r\n      },0);\r\n\r\n\r\n      const submitOrderHandler = async (data) => {\r\n\r\n       const userdata = {\r\n        data,\r\n        orderedItems: ctx.items,\r\n       }\r\n\r\n\r\n        await fetch('https://react-foodorder-ea422-default-rtdb.firebaseio.com/orders.json', {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            user : userdata,\r\n            orderedItems: ctx.items,\r\n          }),\r\n        });\r\n        console.log(userdata)\r\n        ctx.clearCart();\r\n        toggle();\r\n        register(\"\")\r\n      };\r\n\r\n    \r\n    return(\r\n        <React.Fragment>\r\n            <div>\r\n             <Navbar color=\"light\" light expand=\"md\" className=\"container-fluid fixed-top\">\r\n        <NavbarBrand className=\"navbar-brand \">\r\n            <img src={logo} alt=\"Logoimage\"/>\r\n            Food Order\r\n        </NavbarBrand>\r\n        <Nav className=\" ms-auto pe-5\" navbar>\r\n        <div>\r\n        <button className=\"cart-btn\" onClick={toggle}>\r\n                <img src={cartLogo} alt=\"cartIcon\" className=\"cartLogo\"/>\r\n                My Cart\r\n                <Badge className=\"badge\" style={{borderRadius:\"10px\"}}>{ctxVal}</Badge>\r\n            </button>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}> <img src={cartLogo} alt=\"cartIcon\" className=\"cartLogo\"/> Your Cart</ModalHeader>\r\n        <ModalBody>\r\n            <Cart/>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          {!Orderform && <Button className=\"btn-cancel\" onClick={toggle}>Cancel</Button>}\r\n          {hasItems && !Orderform && <Button className=\"btn-order\" onClick={toggleForm}>Order</Button>}\r\n         \r\n        </ModalFooter>\r\n        {Orderform && <div>\r\n          <form className=\"order-form\" onSubmit={handleSubmit(submitOrderHandler)}>\r\n            <div>\r\n            <label htmlFor=\"Fname\">First Name</label>\r\n            <input id=\"Fname\" name=\"firstName\" type=\"text\" {...register('firstName', { required: true })}/>\r\n           <p>{errors.firstName?.message}</p>\r\n            </div>\r\n            <div>\r\n            <label htmlFor=\"Lname\">Last Name</label>\r\n            <input id=\"Lname\" name=\"lastName\" type=\"text\" {...register('lastName', { required: true })}/>\r\n            <p>{errors.lastName?.message}</p>\r\n            </div>\r\n            <div>\r\n            <label htmlFor=\"pin\">PIN CODE</label>\r\n            <input id=\"pin\" name=\"pin\" {...register('pincode', { required: true })}/>\r\n            <p>{errors.pincode?.message}</p>\r\n            </div>\r\n            <div>\r\n            <label htmlFor=\"street\">Street</label>\r\n            <input id=\"street\" name=\"street\" type=\"text\" {...register('street', { required: true })}/>\r\n            <p>{errors.street?.message}</p>\r\n            </div>\r\n            <button className=\"btn-cancel\" onClick={toggle}>Cancel</button>\r\n            <button className=\"btn-order\" type=\"submit\">Submit Order</button>\r\n          </form>\r\n        </div>}\r\n      </Modal>\r\n    </div>\r\n        </Nav>\r\n      </Navbar>\r\n      </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default NavbarHeader;"]},"metadata":{},"sourceType":"module"}
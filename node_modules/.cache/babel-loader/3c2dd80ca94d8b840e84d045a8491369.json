{"ast":null,"code":"var _jsxFileName = \"E:\\\\work github\\\\food-order-ReactApp\\\\src\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport tomatoEgg from '../assets/menu/tomatoEgg.jpg';\nimport dessert from '../assets/menu/dessert.jpg';\nimport creamSoup from '../assets/menu/creamSoup.jpg';\nimport pasta from '../assets/menu/pasta.jpg';\nimport salad from '../assets/menu/salad.jpg';\nimport sichuan from '../assets/menu/sichuan.jpg';\nimport soup from '../assets/menu/soup.jpg';\nimport tomatoRice from '../assets/menu/tomatoRice.jpg';\nimport MealItem from './MealItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://food-order-reactapp-default-rtdb.firebaseio.com/meals.json');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  } // const mealItems = [\n  //     {\n  //         id: \"1\",\n  //         name:\"Tomatoes and Eggs\",\n  //         description:\"Fresh tomato and eggs with a toast\",\n  //         price:25.5,\n  //         src: tomatoEgg\n  //     },\n  //     {\n  //         id: \"2\",\n  //         name:\"Dessert\",\n  //         description:\"Dessert filled with freshness\",\n  //         price:14.4,\n  //         src: dessert\n  //     },\n  //     {\n  //         id: \"3\",\n  //         name:\"Cream Soup\",\n  //         description:\"Hot and Sweet cream soup\",\n  //         price:55.0,\n  //         src: creamSoup\n  //     },\n  //     {\n  //         id: \"4\",\n  //         name:\"Pasta\",\n  //         description:\"Mouth watering italian pasta\",\n  //         price:42.2,\n  //         src: pasta\n  //     },\n  //     {\n  //         id: \"5\",\n  //         name:\"Salad\",\n  //         description:\"Fresh Salad from farm\",\n  //         price:12.1,\n  //         src: salad\n  //     },\n  //     {\n  //         id: \"6\",\n  //         name:\"Sichuan\",\n  //         description:\"Best Thai dish Hoty and Spicy\",\n  //         price:34.4,\n  //         src: sichuan\n  //     },\n  //     {\n  //         id: \"7\",\n  //         name:\"Soup\",\n  //         description:\"Start your Day with Tomato Soup\",\n  //         price:44.4,\n  //         src: soup\n  //     },\n  //     {\n  //         id: \"8\",\n  //         name:\"Tomato Rice\",\n  //         description:\"Tangy Rice with Hint of spice\",\n  //         price:22.8,\n  //         src: tomatoRice\n  //     }\n  // ]\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: meals.map(item => /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(MealItem, {\n            id: item.id,\n            name: item.name,\n            description: item.description,\n            price: item.price,\n            src: item.src\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AvailableMeals, \"6pndJp/WWpMtmhSnoCH9k0tFnXc=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["E:/work github/food-order-ReactApp/src/Meals/AvailableMeals.js"],"names":["React","useState","useEffect","Container","Row","Col","tomatoEgg","dessert","creamSoup","pasta","salad","sichuan","soup","tomatoRice","MealItem","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","catch","error","message","map","item","src"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport tomatoEgg from '../assets/menu/tomatoEgg.jpg';\r\nimport dessert from '../assets/menu/dessert.jpg';\r\nimport creamSoup from '../assets/menu/creamSoup.jpg';\r\nimport pasta from '../assets/menu/pasta.jpg';\r\nimport salad from '../assets/menu/salad.jpg';\r\nimport sichuan from '../assets/menu/sichuan.jpg';\r\nimport soup from '../assets/menu/soup.jpg';\r\nimport tomatoRice from '../assets/menu/tomatoRice.jpg';\r\nimport MealItem from './MealItem';\r\n\r\n\r\nconst AvailableMeals = () => {\r\n\r\n  const [meals, setMeals] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [httpError, setHttpError] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchMeals = async () => {\r\n      const response = await fetch(\r\n        'https://food-order-reactapp-default-rtdb.firebaseio.com/meals.json'\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Something went wrong!');\r\n      }\r\n\r\n      const responseData = await response.json();\r\n\r\n      const loadedMeals = [];\r\n\r\n      for (const key in responseData) {\r\n        loadedMeals.push({\r\n          id: key,\r\n          name: responseData[key].name,\r\n          description: responseData[key].description,\r\n          price: responseData[key].price,\r\n        });\r\n      }\r\n\r\n      setMeals(loadedMeals);\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetchMeals().catch((error) => {\r\n      setIsLoading(false);\r\n      setHttpError(error.message);\r\n    });\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <section>\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  if (httpError) {\r\n    return (\r\n      <section>\r\n        <p>{httpError}</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n    // const mealItems = [\r\n    //     {\r\n    //         id: \"1\",\r\n    //         name:\"Tomatoes and Eggs\",\r\n    //         description:\"Fresh tomato and eggs with a toast\",\r\n    //         price:25.5,\r\n    //         src: tomatoEgg\r\n    //     },\r\n    //     {\r\n    //         id: \"2\",\r\n    //         name:\"Dessert\",\r\n    //         description:\"Dessert filled with freshness\",\r\n    //         price:14.4,\r\n    //         src: dessert\r\n    //     },\r\n    //     {\r\n    //         id: \"3\",\r\n    //         name:\"Cream Soup\",\r\n    //         description:\"Hot and Sweet cream soup\",\r\n    //         price:55.0,\r\n    //         src: creamSoup\r\n    //     },\r\n    //     {\r\n    //         id: \"4\",\r\n    //         name:\"Pasta\",\r\n    //         description:\"Mouth watering italian pasta\",\r\n    //         price:42.2,\r\n    //         src: pasta\r\n    //     },\r\n    //     {\r\n    //         id: \"5\",\r\n    //         name:\"Salad\",\r\n    //         description:\"Fresh Salad from farm\",\r\n    //         price:12.1,\r\n    //         src: salad\r\n    //     },\r\n    //     {\r\n    //         id: \"6\",\r\n    //         name:\"Sichuan\",\r\n    //         description:\"Best Thai dish Hoty and Spicy\",\r\n    //         price:34.4,\r\n    //         src: sichuan\r\n    //     },\r\n    //     {\r\n    //         id: \"7\",\r\n    //         name:\"Soup\",\r\n    //         description:\"Start your Day with Tomato Soup\",\r\n    //         price:44.4,\r\n    //         src: soup\r\n    //     },\r\n    //     {\r\n    //         id: \"8\",\r\n    //         name:\"Tomato Rice\",\r\n    //         description:\"Tangy Rice with Hint of spice\",\r\n    //         price:22.8,\r\n    //         src: tomatoRice\r\n    //     }\r\n    // ]\r\n    \r\n        \r\n    return(\r\n        <React.Fragment>\r\n            <Container fluid>\r\n            <Row>\r\n           \r\n            {\r\n                meals.map((item)=> \r\n                <Col md={3}>\r\n                    <MealItem \r\n                        key={item.id}\r\n                        id={item.id}\r\n                        name={item.name}\r\n                        description={item.description}\r\n                        price={item.price}\r\n                        src={item.src}\r\n                    />\r\n                    </Col>)\r\n            }\r\n            \r\n            </Row>\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AvailableMeals;"]},"metadata":{},"sourceType":"module"}